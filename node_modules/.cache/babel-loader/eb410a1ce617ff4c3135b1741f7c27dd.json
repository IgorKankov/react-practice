{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './reducer/index';\nimport { save } from 'redux-localstorage-simple';\n/* eslint-disable no-underscore-dangle */\n\nvar composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n/* eslint-enable */\n\nvar configureStore = function configureStore(preloadedState) {\n  return createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(save({\n    namespace: 'todo-list'\n  }))));\n};\n\nvar store = configureStore({});\nexport default store;","map":{"version":3,"sources":["/home/igorkankov/own-projects/react-practice/src/components/redux-lesson/store.js"],"names":["createStore","compose","applyMiddleware","rootReducer","save","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState","namespace","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,IAAT,QAAqB,2BAArB;AAEA;;AACA,IAAMC,gBAAgB,GACpBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACA,OAAOC,MAAP,KAAkB,QADlB,IAEAA,MAAM,CAACC,oCAFP,GAGED,MAAM,CAACC,oCAAP,CAA4C,EAA5C,CAHF,GAGoDT,OAJtD;AAKA;;AAEA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,cAAc;AAAA,SACnCZ,WAAW,CACTG,WADS,EAETS,cAFS,EAGTP,gBAAgB,CACdH,eAAe,CAACE,IAAI,CAAC;AAACS,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAAL,CADD,CAHP,CADwB;AAAA,CAArC;;AAUA,IAAMC,KAAK,GAAGH,cAAc,CAAC,EAAD,CAA5B;AAEA,eAAeG,KAAf","sourcesContent":["import {createStore, compose, applyMiddleware} from 'redux';\nimport rootReducer from './reducer/index';\nimport { save } from 'redux-localstorage-simple'\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n/* eslint-enable */\n\nconst configureStore = preloadedState => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(save({namespace: 'todo-list'}))\n    ),\n  )\n);\n\nconst store = configureStore({});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}