{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/igorkankov/own-projects/react-practice/src/components/redux-lesson/components/todo-item/todo-item.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-item.scss';\n\nvar ToDoItem = function ToDoItem(_ref) {\n  var text = _ref.text,\n      isCompleted = _ref.isCompleted,\n      removeTask = _ref.removeTask,\n      id = _ref.id,\n      completeTask = _ref.completeTask;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: function onClick() {\n      return completeTask(id);\n    },\n    className: isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: isCompleted ? 'completed text' : 'text',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, text), /*#__PURE__*/React.createElement(\"i\", {\n    onClick: function onClick() {\n      return removeTask(id);\n    },\n    className: \"fas fa-times\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nToDoItem.propTypes = {\n  text: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  removeTask: PropTypes.func,\n  completeTask: PropTypes.func,\n  id: PropTypes.number\n};\nToDoItem.defaultProps = {\n  text: '',\n  isCompleted: false,\n  removeTask: function removeTask() {},\n  completeTask: function completeTask() {},\n  id: 0\n};\nexport default ToDoItem;","map":{"version":3,"sources":["/home/igorkankov/own-projects/react-practice/src/components/redux-lesson/components/todo-item/todo-item.js"],"names":["React","PropTypes","ToDoItem","text","isCompleted","removeTask","id","completeTask","propTypes","string","bool","func","number","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,WAAT,QAASA,WAAT;AAAA,MAAsBC,UAAtB,QAAsBA,UAAtB;AAAA,MAAkCC,EAAlC,QAAkCA,EAAlC;AAAA,MAAsCC,YAAtC,QAAsCA,YAAtC;AAAA,sBACf;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE;AAAA,aAAMA,YAAY,CAACD,EAAD,CAAlB;AAAA,KAAZ;AAAoC,IAAA,SAAS,EAAEF,WAAW,GAAG,0BAAH,GAAgC,oBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAEA,WAAW,GAAG,gBAAH,GAAsB,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DD,IAA3D,CAFF,eAGE;AAAG,IAAA,OAAO,EAAE;AAAA,aAAME,UAAU,CAACC,EAAD,CAAhB;AAAA,KAAZ;AAAkC,IAAA,SAAS,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADe;AAAA,CAAjB;;AAQAJ,QAAQ,CAACM,SAAT,GAAqB;AACnBL,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MADG;AAEnBL,EAAAA,WAAW,EAAEH,SAAS,CAACS,IAFJ;AAGnBL,EAAAA,UAAU,EAAEJ,SAAS,CAACU,IAHH;AAInBJ,EAAAA,YAAY,EAAEN,SAAS,CAACU,IAJL;AAKnBL,EAAAA,EAAE,EAAEL,SAAS,CAACW;AALK,CAArB;AAQAV,QAAQ,CAACW,YAAT,GAAwB;AACtBV,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,WAAW,EAAE,KAFS;AAGtBC,EAAAA,UAAU,EAAE,sBAAM,CAAE,CAHE;AAItBE,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAJA;AAKtBD,EAAAA,EAAE,EAAE;AALkB,CAAxB;AAQA,eAAeJ,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-item.scss';\n\nconst ToDoItem = ({ text, isCompleted, removeTask, id, completeTask}) => (\n  <li className=\"todo-item\">\n    <i onClick={() => completeTask(id)} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\n    <i onClick={() => removeTask(id)} className=\"fas fa-times\" />\n  </li>\n);\n\nToDoItem.propTypes = {\n  text: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  removeTask: PropTypes.func,\n  completeTask: PropTypes.func,\n  id: PropTypes.number\n};\n\nToDoItem.defaultProps = {\n  text: '',\n  isCompleted: false,\n  removeTask: () => {},\n  completeTask: () => {},\n  id: 0\n};\n\nexport default ToDoItem;"]},"metadata":{},"sourceType":"module"}